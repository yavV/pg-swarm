version: '3.8'
services:
  landing-db:
#    build:
#      context: ./
#      dockerfile: docker/postgres.Dockerfile
    image: pgsql-13_repmgr_5.2:latest
    environment:
#      POSTGRES_HOST_AUTH_METHOD: trust
      TZ: "Europe/Moscow"
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      NODE_NAME: node-1
      CLUSTER_NODE_NETWORK_NAME: ${MASTER_DB} # (default: hostname of the node)
      PARTNER_NODES: ${MASTER_DB}, ${SLAVE_DB}
      REPLICATION_PRIMARY_HOST: ${MASTER_DB}
      NODE_PRIORITY: 100
      SSH_ENABLE: 1
      CLEAN_OVER_REWIND: 0
      CLUSTER_NAME: ${MASTER_DB}
      REPLICATION_DB: ${REPLICATION_DB}
      REPLICATION_USER: ${REPLICATION_USER}
      REPLICATION_PASSWORD: ${REPLICATION_PASSWORD}
      REPLICATION_PRIMARY_PORT: 5432
      REPMGR_WAIT_POSTGRES_START_TIMEOUT: 120
      CHECK_PGCONNECT_TIMEOUT: 1
      WAIT_BACKEND_TIMEOUT: 120
      EQUIRE_MIN_BACKENDS: 0
      NOTVISIBLE: ${NOTVISIBLE}
      REPMGR_MAJOR: 5
      REPMGR_NODES_TABLE: ${REPMGR_NODES_TABLE}
      REPMGR_NODE_ID_COLUMN: ${REPMGR_NODE_ID_COLUMN}
      REPMGR_NODE_NAME_COLUMN: ${REPMGR_NODE_NAME_COLUMN}
      REPMGR_CLUSTER_SHOW_MASTER_PATTERN: ${REPMGR_CLUSTER_SHOW_MASTER_PATTERN}
      REPMGR_SHOW_NODES_TABLE: ${REPMGR_SHOW_NODES_TABLE}
      REPMGR_NODE_ID_PARAM_NAME: ${REPMGR_NODE_ID_PARAM_NAME}
      REPMGR_LOG_LEVEL_PARAM_NAME: ${REPMGR_LOG_LEVEL_PARAM_NAME}
      REPMGR_MASTER_RESPONSE_TIMEOUT_PARAM_NAME: ${REPMGR_MASTER_RESPONSE_TIMEOUT_PARAM_NAME}
      MASTER_ROLE_LOCK_FILE_NAME: ${PGDATA}${MASTER_ROLE_LOCK_FILE_NAME_W_O_PATH}
      STANDBY_ROLE_LOCK_FILE_NAME: ${PGDATA}${STANDBY_ROLE_LOCK_FILE_NAME_W_O_PATH}
      USE_REPLICATION_SLOTS: 1
      REPMGR_DEGRADED_MONITORING_TIMEOUT: 5
      REPMGR_PID_FILE: ${REPMGR_PID_FILE}
      STOPPING_LOCK_FILE: ${STOPPING_LOCK_FILE}
      MASTER_SYNC_LOCK_FILE: ${MASTER_SYNC_LOCK_FILE}
      STOPPING_TIMEOUT: 5
      CONNECT_TIMEOUT: 2
      RECONNECT_ATTEMPTS: 3
      RECONNECT_INTERVAL: 5
      MASTER_RESPONSE_TIMEOUT: 20
      LOG_LEVEL: INFO
      REPMGR_SLOT_NAME_PREFIX: ${REPMGR_SLOT_NAME_PREFIX}
      LAUNCH_RECOVERY_CHECK_INTERVAL: 5
    ports:
      - 5442:5432
    volumes:
      - postgres1:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d ${DB_DATABASE} -U ${DB_USERNAME}
      timeout: 5s
    networks:
      landing1:
        aliases:
          - db-TAG
      local-landing:
        aliases:
          - db-local

  landing-db-slave:
#    build:
#      context: ./
#      dockerfile: docker/postgres.Dockerfile
    image: pgsql-13_repmgr_5.2-slave:latest
    environment:
#      POSTGRES_HOST_AUTH_METHOD: trust
      TZ: "Europe/Moscow"
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      NODE_NAME: node-1
      CLUSTER_NODE_NETWORK_NAME: ${SLAVE_DB} # (default: hostname of the node)
      PARTNER_NODES: ${MASTER_DB}, ${SLAVE_DB}
      REPLICATION_PRIMARY_HOST: ${MASTER_DB}
      NODE_PRIORITY: 100
      SSH_ENABLE: 1
      CLEAN_OVER_REWIND: 0
      CLUSTER_NAME: ${MASTER_DB}
      REPLICATION_DB: ${REPLICATION_DB}
      REPLICATION_USER: ${REPLICATION_USER}
      REPLICATION_PASSWORD: ${REPLICATION_PASSWORD}
      REPLICATION_PRIMARY_PORT: 5432
      REPMGR_WAIT_POSTGRES_START_TIMEOUT: 120
      CHECK_PGCONNECT_TIMEOUT: 1
      WAIT_BACKEND_TIMEOUT: 120
      EQUIRE_MIN_BACKENDS: 0
      NOTVISIBLE: ${NOTVISIBLE}
      REPMGR_MAJOR: 5
      REPMGR_NODES_TABLE: ${REPMGR_NODES_TABLE}
      REPMGR_NODE_ID_COLUMN: ${REPMGR_NODE_ID_COLUMN}
      REPMGR_NODE_NAME_COLUMN: ${REPMGR_NODE_NAME_COLUMN}
      REPMGR_CLUSTER_SHOW_MASTER_PATTERN: ${REPMGR_CLUSTER_SHOW_MASTER_PATTERN}
      REPMGR_SHOW_NODES_TABLE: ${REPMGR_SHOW_NODES_TABLE}
      REPMGR_NODE_ID_PARAM_NAME: ${REPMGR_NODE_ID_PARAM_NAME}
      REPMGR_LOG_LEVEL_PARAM_NAME: ${REPMGR_LOG_LEVEL_PARAM_NAME}
      REPMGR_MASTER_RESPONSE_TIMEOUT_PARAM_NAME: ${REPMGR_MASTER_RESPONSE_TIMEOUT_PARAM_NAME}
      MASTER_ROLE_LOCK_FILE_NAME: ${PGDATA}${MASTER_ROLE_LOCK_FILE_NAME_W_O_PATH}
      STANDBY_ROLE_LOCK_FILE_NAME: ${PGDATA}${STANDBY_ROLE_LOCK_FILE_NAME_W_O_PATH}
      USE_REPLICATION_SLOTS: 1
      REPMGR_DEGRADED_MONITORING_TIMEOUT: 5
      REPMGR_PID_FILE: ${REPMGR_PID_FILE}
      STOPPING_LOCK_FILE: ${STOPPING_LOCK_FILE}
      MASTER_SYNC_LOCK_FILE: ${MASTER_SYNC_LOCK_FILE}
      STOPPING_TIMEOUT: 5
      CONNECT_TIMEOUT: 2
      RECONNECT_ATTEMPTS: 3
      RECONNECT_INTERVAL: 5
      MASTER_RESPONSE_TIMEOUT: 20
      LOG_LEVEL: INFO
      REPMGR_SLOT_NAME_PREFIX: ${REPMGR_SLOT_NAME_PREFIX}
      LAUNCH_RECOVERY_CHECK_INTERVAL: 5
    ports:
      - 5452:5432
    volumes:
      - postgres2:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d ${DB_DATABASE} -U ${DB_USERNAME}
      timeout: 5s
#    depends_on:
#      - landing-db
    networks:
      landing1:
        aliases:
          - db-TAG
      local-landing:
        aliases:
          - landing-db-slave

  pgpool:
#    privileged: true
#    build:
#      context: ./
#      dockerfile: docker/pgpool.Dockerfile
    image: pgpool-2-4.2.3
    deploy:
      mode: replicated
      replicas: 2
#      deploy:
#        mode: global
      update_config:
        order: stop-first
    environment:
      PCP_USER: ${PCP_USER}
      PCP_PASSWORD: ${PCP_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      WAIT_BACKEND_TIMEOUT: 60
      NOTVISIBLE: ${NOTVISIBLE}
      CHECK_USER: ${REPLICATION_USER}
      CHECK_PASSWORD: ${REPLICATION_PASSWORD}
      CHECK_PGCONNECT_TIMEOUT: 3 #timout for checking if primary node is healthy
      SSH_ENABLE: 1
      DB_USERS: "${DB_USERNAME}:${DB_PASSWORD}" # in format user:password[,user:password[...]]
      BACKENDS: "0:${MASTER_DB}:5432:2:${PGDATA}:ALLOW_TO_FAILOVER,1:${SLAVE_DB}:5432:1:${PGDATA}:ALLOW_TO_FAILOVER"
                # in format num:host:port:weight:data_directory:flag[,...]
                # defaults:
                #   port: 5432
                #   weight: 1
                #   data_directory: /var/lib/postgresql/data
                #   flag: ALLOW_TO_FAILOVER
      REQUIRE_MIN_BACKENDS: 0 # minimal number of backends to start pgpool (some might be unreachable)
      CONFIGS: "num_init_children:250,max_pool:4"
#    ports:
#      - target: 5432
#        published: 5432
#        mode: host

    volumes:
        - ./ssh/keys:/tmp/.ssh/keys
    networks:
      local-landing:
        aliases:
          - pgpool
      landing1:
        aliases:
          - pgpool


volumes:
  postgres1:
  postgres2:


networks:
  local-landing:
  landing1:
    external: true
#    attachable: true
